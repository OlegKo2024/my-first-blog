/* Это комментарий - это комментарий */
/* 2. Что значит "найти элемент в HTML-коде слева"
Под вкладкой Elements вы видите структуру HTML страницы — обычно дерево элементов (теги), оно расположено в верхней части панели DevTools.
В этом дереве можно раскрывать и искать нужный элемент (например, <h1>, <a>, <div> и т.д.).
Клик по элементу в дереве — выделится этот элемент на странице.
И наоборот: если на странице нажать правой кнопкой → Inspect (Посмотреть код) — откроется DevTools, элемент будет выделен в этом дереве.
Итог: “в HTML-коде слева” — примерно то же, что и у вас сверху под вкладкой Elements — это дерево HTML.
Простые селекторы - пример подсчета:
a                   0,0,0,1 = 1      ← Bootstrap
h1 a                0,0,0,2 = 2      ← Ваш старый
header h1 a         0,0,0,3 = 3      ← Ваш новый
body header h1 a    0,0,0,4 = 4     ← Еще сильнее
С классами:
.header          0,0,1,0 = 10
.header a        0,0,1,1 = 11
Чтобы переопределить Bootstrap:
Добавьте 1-2 дополнительных тега в селектор
Или добавьте класс к вашему элементу
*/

header h1 a,
header h2 a,
main h1 a,
main h2 a {
    color: #bb223c;
    font-family: 'Lobster';
    text-decoration: none; /* Убирает подчеркивание ссылки */
}

.header-container {
    background-color: #f3b47c;  /* Задает фоновый цвет всего блока .header-container. */
    display: flex;           /* ключевое свойство для макета - превращает блок .header-container в flex-контейнер.
    Его дочерние элементы (ссылка с логотипом <a> и заголовок <h1>) автоматически становятся flex-элементами и
    выстраиваются в ряд (по умолчанию) по горизонтали. Без этого свойства логотип и заголовок стояли бы
    друг под другом (как блочные элементы). */
    align-items: center;     /* Вертикальное выравнивание элементов контейнера по центру.
    Иначе логотип (как изображение) и текст выровнялись бы по нижнему краю */
    gap: 50px;              /* Создает пространство (отступ) между дочерними flex-элементами. В данном случае это
    расстояние в 50 пикселей между логотипом и заголовком <h1>. Это гораздо более современный и удобный способ
    добавить отступ, чем использование margin, так как gap добавляет промежуток только между элементами,
    не затрагивая внешние отступы */
    margin-top: 0;         /* убирает верхний внешний отступ у контейнера.*/
    margin-bottom: 40px;   /* Создает большое пространство (нижний внешний отступ) в 40px после блока .header-container.
    Это необходимо, чтобы визуально отделить "шапку" от следующего за ней контента ( от блока .page-header).
    Без этого отступа следующий блок будет находиться слишком близко */
    padding: 10px 20px 30px 40px;   /* Необходимость и функция: Задает внутренние отступы внутри блока .header-container.
    Это нужно, чтобы контент (логотип и заголовок) не прижимался вплотную к краям блока. Синтаксис из 4 знач. означает:
    10px — отступ сверху (top) 20px — отступ справа (right) 30px — отступ снизу (bottom) 40px — отступ слева (left)
    Это делает блок более просторным и удобным для восприятия. */
}

/* Для первой ссылки */
.logo-link {
    display: inline-block;
    border-radius: 8px;
    transition: transform 0.3s ease;
}

.logo-link:hover {
    transform: scale(1.25);
}

.site-title {
    color: white;
    font-size: 2rem;
    text-decoration: none;
}

/* Для второй ссылки
Без padding содержимое прижато к границам
    При scale(1.5) увеличение начинается от границ содержимого - элемент увеличивается, но может обрезаться
Разница между padding и margin:
    padding: 20px 25px; = Внутреннее пространство (20px сверху/снизу, 25px слева/справа)
    margin: 5px; = Внешние отступы от других элементов*/
.page-header {
    display: inline-block; /* Контейнер */
}

.page-title {
    color: #C25100; /* Темно-оранжевый цвет */
    font-size: 1.5rem; /* Размер шрифта ~24px */
    text-decoration: none; /* Убирает подчеркивание ссылки */
    display: inline-block; /* Делает ссылку блочной для трансформаций */
    transition: all 0.3s ease; /* Плавная анимация ВСЕХ изменений за 0.3 сек */
    transform-origin: left center; /* Точка трансформации - левый центр */
    /* Без padding и margin - чтобы не было отступов в обычном состоянии */
}

.page-title:hover {
    color: #1fde5a; /* Изменяет цвет на зеленый при наведении */
    transform: scale(2); /* Увеличивает элемент в 2 раза */
    z-index: 100; /* Поднимает элемент над другими (чтобы не перекрывался) */
    background-color: white; /* Белый фон чтобы текст был читаемым поверх других элементов */
    padding: 5px 10px; /* Внутренние отступы создают пространство для увеличения - чтобы не обрезались */
    margin: 15px; /* Внешние отступы чтобы увеличенный элемент не задевал соседей */
}

.external_link: {
    color: #C25100;;
    font-size: 1.2rem; /* Размер шрифта */
    text-decoration: none; /* Убирает подчеркивание ссылки */
    display: inline-block; /* Делает ссылку блочной для трансформаций */
    transition: all 0.3s ease; /* Плавная анимация ВСЕХ изменений за 0.3 сек */
    transform-origin: left center;
}

.external_link:hover {
    color: #ed9548; /* Изменяет цвет при наведении */
    transform: scale(1.5); /* Увеличивает элемент в 1.5 раза */
    z-index: 100; /* Поднимает элемент над другими (чтобы не перекрывался) */
    background-color: green; /* Зеленый фон чтобы текст был читаемым поверх других элементов */
    padding: 5px 10px; /* Внутренние отступы создают пространство для увеличения - чтобы не обрезались */
    margin: 15px; /* Внешние отступы чтобы увеличенный элемент не задевал соседей */
}

/* rem — это относительная единица, основанная на размере шрифта корневого элемента страницы, то есть на значении свойства font-size у элемента <html>.
1 rem = размер шрифта, заданный у <html>. Обычно по умолчанию браузеры устанавливают font-size: 16px для <html>, соответственно:
1 rem = 16 пикселей (если не переопределено)
2 rem = 2 × 16px = 32 пикселя
и т.д.

.page-title:hover - hover означает: "Когда пользователь наведет курсор на элемент с классом .main-title, измени его цвет на #a34200"

padding: 5px 25px;
│        │   │
│        │   └── Вторая цифра: горизонтальные отступы (left/right)
│        └── Первая цифра: вертикальные отступы (top/bottom)
└── Свойство внутренних отступов

box-shadow: 5px 5px 20px rgba(0,0,0,0.25); - убрал, так как
      5px - смещение вправо
      5px - смещение вниз
      20px - размытие
        rgba(0, 0, 0, 0.25)
        │    │  │  │   │
        │    │  │  │   └── Альфа (прозрачность) = 25%
        │    │  │  └── Синий (Blue) = 0
        │    │  └── Зеленый (Green) = 0
        │    └── Красный (Red) = 0
        └── Формат цвета
*/